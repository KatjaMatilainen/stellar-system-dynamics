%!PS-Adobe-3.0
%%Title: plummer_exercise_250314.README
%%For: Heikki Salo
%%Creator: a2ps version 4.14
%%CreationDate: Tue Mar 25 12:56:17 2014
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%Requirements: Tumble Duplex 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed string
% Version 1.2 1/31/1990
% Orignal Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 792 def
/sw 612 def
/llx 24 def
/urx 548 def
/ury 768 def
/lly 24 def
/#copies 1 def
%% Pagedevice definitions:
countdictstack
% Push our own mark, since there can be several PS marks pushed depending
% where the failure really occured.
/a2ps_mark
{
%%BeginFeature: *Tumble False
  (<<) cvx exec /Tumble (false) cvx exec (>>) cvx exec setpagedevice
%%EndFeature
%%BeginFeature: *Duplex True
  (<<) cvx exec /Duplex (true) cvx exec (>>) cvx exec setpagedevice
%%EndFeature
} stopped
% My cleartomark
{ /a2ps_mark eq { exit } if } loop
countdictstack exch sub dup 0 gt
{
  { end } repeat
}{
  pop
} ifelse
/th 20.000000 def
/fnfs 15 def
/bfs 7.193850 def
/cw 4.316310 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 121.400000 mul
def
/ph
   695.645253 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
40 0 translate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.021417 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(==========================================================) p n
(     plummer_exercise_250314.README) N
(==========================================================) N
() N
() N
(In this exercise we create a particle distribution ) N
(\(set of N position and velocity vectors\) following ) N
(a Plummer-sphere phase-space distribution function.) N
() N
(We check using Hernquist's tree-code that the created ) N
(particle distribution is a self-consistent solution of ) N
(time-independent Boltzmann equation + Poisson equation) N
(\(= the simulated distribution does not evolve with time\).) N
() N
(Before starting writing our Plummer-procedure, check) N
(that the tree-code + related IDL analysis programs work,) N
(by using the provided example data.) N
() N
(  ) N
(============) N
(WHAT TO DO:) N
(===========) N
() N
(===============================) N
(A\) Check that treecode works) N
(===============================) N
() N
() N
(1\) Copy the directory /wrk/hsalo/TJD2013_plummer.dir ) N
() N
(  Contains material needed for tree-code simulation) N
(  + example routines for creating Plummer spheres ) N
(  \(first make your own procedure before checking these!\)) N
() N
(  subdirectories:) N
(  CODE      -    source code) N
(  JOBS      -    job-files + simulation input files ) N
(  RESULTS   -    output ) N
(  IDL       -    various analysis-procedures) N
(  JOB_EXAMPLES - example job-files) N
() N
() N
(2\) Add the TJD2013_plummer.dir directory into your IDL-path in .cshrc) N
() N
(  \(setenv IDL_PATH ....   :+~/TJD2013_PLUMMER.dir\)) N
(  remember source .cshrc) N
() N
() N
(3\) Compile the tree-code in subdirectory CODE) N
() N
(  g77 -O3 tree3_hs_old.f tree1_linux.f bbani2006_tree.f -o tree_2014.exe) N
() N
(  [this version has added animation output]) N
() N
() N
(4\)  Start a test simulation) N
() N
(   Copy from subdirectory JOBS_EXAMPLES to JOBS:) N
() N
(   cd JOBS) N
(   cp -rp ../JOBS_EXAMPLES/plummer_example2014.job ../JOBS) N
(   cp -rp ../JOBS_EXAMPLES/plummer_example2014.TREEPAR ../JOBS) N
(   cp -rp ../JOBS_EXAMPLES/plummer_example2014.TREEBI ../JOBS) N
() N
() N
(   source plummer_example2014.job &) N
() N
(   NOTE: gives an 'error message' if a new simulation is started) N
(         Nothing to worry: just complains there is no old directory to remove) N
( ) N
() N
(5\) Make sure the simulation works by checking its output) N
(   Giving program name without arguments -> brief help) N
() N
(   OPEN ANOTHER XTERMINAL!) N
() N
(   cd RESULTS) N
( ) N
(   idl) N
() N
(   treelog,dire='plummer_example2014'       - logfile info) N
(   tree_ani_2010,'plummer_example2014'      - animation  ) N
(   tree_read,'plummer_example2014',/auto    - reads snapshots) N
(                                            -> makes snaphost:) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (       plummer_example2014sxyzNN    \(=idl-savefiles\)) N
(                                              displays velocity dispersions and fractional masses) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (      \(see its help message\)) N
(   What do you observe?) N
() N
() N
(;   you can restore snaphost from simulations:) N
(   restore plummer_example2014/*sxyz0) N
(   restore plummer_example2014/*sxyz10) N
() N
(   Try plot_3d.pro for displaying ) N
() N
(plummer_exercise_250314.README) (Page 1/3) (Mar 25, 14 12:56) title
border
grestore
(Printed by Heikki Salo) rhead
() (1/3) (Tuesday March 25, 2014) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.021417 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() N
(6\) Try another example run) N
() N
(   cp -rp ../JOBS_EXAMPLES/plummer_example2014_collapse.job ../JOBS) N
(   cp -rp ../JOBS_EXAMPLES/plummer_example2014_collapse.TREEPAR ../JOBS) N
(   cp -rp ../JOBS_EXAMPLES/plummer_example2014_collapse.TREEBI ../JOBS) N
() N
(   source plummer_example2014_collapse.job &) N
() N
() N
(   What do you observe now?) N
() N
() N
() N
() N
(=========================================================) N
(B\)   Make your own procedure for creating initial values) N
(=========================================================) N
() N
() N
(1\) Read the instructions in  plummer_sphere_250314.pdf) N
() N
(   Gives background \(similar material as in Lectures but with more details\)) N
(   +detailed instructions in the end) N
() N
() N
(2\) Write IDL procedure which creates initial positions & velocities) N
(   for N particles and writes them to TREEBI-file) N
() N
(   Need to give values to:) N
(     N   number of particles ) N
(     b   scale readius) N
(     M   total mass) N
(     G   gravity constant) N
(     eps softening length: use 0.01 b) N
() N
() N
( The format of writing the TREEBI-file is) N
() N
( printf,1,npart                              ;N) N
( printf,1,ndim                               ;dimension = 3) N
( printf,1,time ) N
( for i=0l,npart-1 do begin) N
(    printf,1,pmass\(i\)                       ;masses) N
( endfor) N
( for i=0l,npart-1 do begin) N
(    printf,1,xx\(i\),yy\(i\),zz\(i\)              ;positions) N
( endfor) N
( for i=0l,npart-1 do begin) N
(    printf,1,vx\(i\),vy\(i\),vz\(i\)              ;velocities) N
( endfor) N
( for i=0l,npart-1 do begin) N
(    printf,1,eps\(i\)                         ;softening lengths) N
( endfor) N
() N
() N
(3\) Set up a simulation with the TREEBI-file you created) N
() N
( - copy the TREEBI-file to JOBS directory to a new name   \(eg. plummer_test.TREEBI\)) N
() N
( - make a corresponding TREEPAR-file   ) N
(   using plummer_example2014.TREEPAR as an example:) N
() N
(#=====================================================================================) N
(#=====================================================================================) N
(C**********Basic input parameters**********) N
(plummer_example2014      headline) N
( 500                     nsteps) N
( 50                      noutbod) N
( 50                      noutlog) N
( 0.1                     dtime) N
( 0.7                     tol) N
( 0.05                    eps) N
( .TRUE.            inpteps) N
( .FALSE.           variabls) N
( 30                nsvolume) N
( 0.05              nsvtol) N
( .TRUE.            usequad) N
( .FALSE.           dgravsum) N
( .FALSE.           restart) N
(C**********Individual time steps**********) N
( 1                 inittbin) N
( 1                 mintstep) N
( 10000.            etol) N
( 64                ntvector) N
(C**********Miscellaneous parameters**********) N
( .TRUE.                  selfgrav) N
(2,300,5.                 nout,npix,range) N
(-------------------------------------------------------------------------) N
(#=====================================================================================) N
(#=====================================================================================) N
() N
(eg. cp  plummer_example2014.TREEPAR   plummer_test.TREEPAR) N
() N
(Change \(if needed\):) N
(plummer_exercise_250314.README) (Page 2/3) (Mar 25, 14 12:56) title
border
grestore
(Printed by Heikki Salo) rhead
() (Tuesday March 25, 2014) (2/3) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 3
%%BeginPageSetup
/pagesave save def
40 0 translate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.021417 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(headline         run identification \(use same as in file names\)  eg.   plummer_test) N
(nsteps           total number of steps) N
(dtime            timestep ) N
(nout             animation interval) N
(npix             animation pixel-size) N
(range            animation range) N
() N
() N
() N
() N
(copy an existing job-file into new one) N
() N
(eq. cp  plummer_example2014.job   plummer_test.job) N
() N
() N
(#=====================================================================================) N
(#=====================================================================================) N
(#--------------------------------------------------------------------) N
(#JOBS/plummer_example2014.job) N
(#--------------------------------------------------------------------) N
(#Example of using  Hernquist'n tree code ) N
(#Simulatiom output to ../RESULTS/plummer_example2014 directory) N
() N
(#this file is executed from JOBS-directory with the command) N
(# source plummer_example2014.job &) N
() N
(#--------------------------------------------------------------------) N
(#Create the simulation output directory \(remove first if it exists before\)) N
() N
(  unalias rm) N
(  cd ../RESULTS) N
(  rm -r plummer_example2014) S 32 T () N
(  mkdir plummer_example2014) N
() N
(#Move to the newly created directory) N
() N
(  cd plummer_example2014) N
() N
(#Tree code assumes that:) N
(#  Particle position+ velocities in file TREEBI) N
(#  Simulation parameter values   in file TREEPAR) N
(#--> copy the files we created from JOBS directory to these fixed names) N
(# \(plummer_example.TREEBI  made with make_plummer.pro\)) N
() N
(cp -rp ../../JOBS/plummer_example2014.TREEBI ./TREEBI) N
(cp -rp ../../JOBS/plummer_example2014.TREEPAR ./TREEPAR) N
() N
(# Run the simulation) N
() N
(../../CODE/tree_2014.exe > plummer_example2010.output) N
() N
(#=====================================================================================) N
(#=====================================================================================) N
() N
() N
(*  Change the names of input/output files!) N
() N
(* run it ----> source plummer_test.job &) N
() N
(* and check whether the simulations remains in equilibrium:) N
() N
( \(use tree_ani_2010, tree_read etc...\)) N
() N
() N
() N
(4\) Once you can create succesfull steady-state systems, start playing with them) N
() N
(- make Plummer density distribution where velocities are too small or large) N
() N
(- flatten the Plummer sphere) N
() N
(- make 2 plummmer sphere in circular orbit \(for example 5 times the scale radius\)) N
() N
(- make two Plummer spheres collide with different velocities) N
() N
(  \(see tree_join.pro procedure for merging together two treebi-files\)) N
() N
() N
() N
() N
() N
(plummer_exercise_250314.README) (Page 3/3) (Mar 25, 14 12:56) title
border
grestore
(Printed by Heikki Salo) rhead
() (3/3) (Tuesday March 25, 2014) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
